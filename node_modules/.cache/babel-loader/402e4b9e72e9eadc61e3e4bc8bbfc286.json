{"ast":null,"code":"var _jsxFileName = \"/Users/pedrosoares/Projects/Tutorials/React/tic-tac-toe/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square \" + (props.isWinning ? \"square--winning\" : null),\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      isWinning: this.props.winningSquares.includes(i),\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, `square ${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  drawSquares() {\n    for (let col = 0; col < 3; col++) {\n      for (let row = 0; row < 3; row++) {}\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isDescending: true\n    };\n  }\n\n  handleClick(i) {\n    const locations = [[1, 1], [2, 1], [3, 1], [1, 2], [2, 2], [3, 2], [1, 3], [2, 3], [3, 3]];\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        location: locations[i]\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  sortHistory() {\n    this.setState({\n      isDescending: !this.state.isDescending\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? `Go to move #${move} (col: ${history[move].location[0]} row: ${history[move].location[1]})` : \"Go to game start\";\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: move === this.state.stepNumber ? /*#__PURE__*/_jsxDEV(\"b\", {\n            children: desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 47\n          }, this) : desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this);\n    });\n    console.log(winner);\n    let status;\n\n    if (winner) {\n      status = `Winner: ${winner}`;\n    }\n\n    if (!current.squares.includes(null)) {\n      status = \"It's a draw\";\n    } else {\n      status = `Next player: ${this.state.xIsNext ? \"X\" : \"O\"}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          winningSquares: winner ? winner.line : [],\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: this.state.isDescending ? moves : moves.reverse()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.sortHistory(),\n          children: [\"Sort by: \", this.state.isDescending ? \"Descending\" : \"Ascending\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 173,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        player: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/pedrosoares/Projects/Tutorials/React/tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Square","props","isWinning","onClick","value","Board","Component","renderSquare","i","winningSquares","includes","squares","drawSquares","col","row","render","Game","constructor","state","history","Array","fill","stepNumber","xIsNext","isDescending","handleClick","locations","slice","current","length","calculateWinner","setState","concat","location","jumpTo","step","sortHistory","winner","moves","map","move","desc","console","log","status","line","reverse","document","getElementById","lines","a","b","c","player"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\n\nfunction Square(props) {\n  return (\n    <button\n      className={\"square \" + (props.isWinning ? \"square--winning\" : null)}\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  )\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        key={`square ${i}`}\n        isWinning={this.props.winningSquares.includes(i)}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    )\n  }\n\n  drawSquares() {\n    for (let col = 0; col < 3; col++) {\n      for (let row = 0; row < 3; row++) {\n        \n      }  \n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isDescending: true\n    }\n  }\n\n  handleClick(i) {\n    const locations = [\n      [1, 1],\n      [2, 1],\n      [3, 1],\n      [1, 2],\n      [2, 2],\n      [3, 2],\n      [1, 3],\n      [2, 3],\n      [3, 3],\n    ]\n\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1]\n    const squares = current.squares.slice()\n\n    if (calculateWinner(squares) || squares[i]) {\n      return\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\"\n    this.setState({ \n      history: history.concat([{\n        squares: squares,\n        location: locations[i]\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    })\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    })\n  }\n\n  sortHistory() {\n    this.setState({\n      isDescending: !this.state.isDescending\n    })\n  }\n  \n  render() {\n    const history = this.state.history\n    const current = history[this.state.stepNumber]\n    const winner = calculateWinner(current.squares)\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        `Go to move #${move} (col: ${history[move].location[0]} row: ${history[move].location[1]})`:\n        \"Go to game start\"\n\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {move === this.state.stepNumber ? <b>{desc}</b> : desc}\n          </button>\n        </li>\n      )\n    })\n\n    console.log(winner)\n\n    let status\n    if (winner) {\n      status = `Winner: ${winner}`\n    }\n    if (!current.squares.includes(null)) {\n      status = \"It's a draw\"\n    }\n    else {\n      status = `Next player: ${(this.state.xIsNext ? \"X\" : \"O\")}`\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            winningSquares={winner ? winner.line : []}\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{this.state.isDescending ? moves : moves.reverse()}</ol>\n          <button onClick={() => this.sortHistory()}>\n            Sort by: {this.state.isDescending ? \"Descending\" : \"Ascending\"}\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById(\"root\")\n)\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ]\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        player: squares[a],\n        line: [a, b, c]\n      }\n    }\n  }\n\n  return null\n}"]},"metadata":{},"sourceType":"module"}